openapi: 3.0.2
info:
  title: HomeGym REST API
  version: 0.0.1
paths:
  /api/events:
    get:
      security:
        - token: []
      tags:
        - events
      description: gets a page of events.
      operationId: getWorkouts
      parameters:
        - name: count
          description: The number of events to return
          in: query
          required: false
          schema:
            type: integer
        - name: date
          description:
            The date of the last event that was returned in the previous call.
          in: query
          required: false
          schema:
            type: integer
        - name: previousId
          description:
            The ID of the last event that was returned in the previous call.
          in: query
          required: false
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            json/application:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/event" # TODO: make this a subset of event data

    post:
      security:
        - token: []
      description: Adds an event.
      tags:
        - events
      operationId: addWorkout
      requestBody:
        $ref: "#/components/requestBodies/newEvent"
      responses:
        201:
          description: created
          content:
            json/application:
              schema:
                type: object
                properties:
                  id:
                    type: string

  /api/events/{date}/{id}:
    parameters:
      - name: date
        in: path
        required: true
        schema:
          type: integer
      - name: id
        in: path
        required: true
        schema:
          type: string
    post:
      security:
        - token: []
      description: |
        Updates an event with the field values included in the request body. 
        A nil request body deletes the event.
      tags:
        - events
      operationId: updateWorkoutId
      requestBody:
        content:
          json/application:
            schema:
              type: object
              properties:
                activity:
                  type: string
                time:
                  type: integer
                meta:
                  $ref: "#/components/schemas/eventMeta"
      responses:
        200:
          description: OK

  /api/events/{date}/{id}/exercises:
    parameters:
      - name: date
        in: path
        required: true
        schema:
          type: integer
      - name: id
        in: path
        required: true
        schema:
          type: string
    post:
      security:
        - token: []
      description: Add or update an exercise instance to an event.
      tags:
        - events
      requestBody:
        $ref: "#/components/requestBodies/postExercise"
      responses:
        201:
          description: created
          content:
            json/application:
              schema:
                type: object
                properties:
                  id:
                    type: string

  /api/activities:
    get:
      security:
        - token: []
      description: returns a list of activity names and id's
      tags:
        - activities
      responses:
        200:
          description: OK
          content:
            json/application:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/activity"
    post:
      security:
        - token: []
      description: adds an activity, returns the id.
      tags:
        - activities
      requestBody:
        content:
          json/application:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
                - name
      responses:
        201:
          description: created
          content:
            json/application:
              schema:
                type: object
                properties:
                  id:
                    type: string

  /api/activities/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
    post:
      security:
        - token: []
      description:
        updates an acitivty. Body includes the list of exercises and optionally
        the activity name
      tags:
        - activities
      requestBody:
        content:
          json/application:
            schema:
              $ref: "#/components/schemas/activity"
      responses:
        201:
          description: created
          content:
            json/application:
              schema:
                type: object
                properties:
                  id:
                    type: string
  /api/activities/{id}/exercises:
    get:
      security:
        - token: []
      description: returns a list of exercise types for an activity
      tags:
        - activities
      responses:
        200:
          description: OK
          content:
            json/application:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/exerciseType"
  /api/exercises:
    get:
      security:
        - token: []
      description: returns a list of exerciseType objects
      tags:
        - exercises
      responses:
        200:
          description: OK
          content:
            json/application:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/exerciseType"
    post:
      security:
        - token: []
      description: creates an exercise type and returns the id
      tags:
        - exercises
      responses:
        201:
          description: OK
          content:
            json/application:
              schema:
                type: object
                properties:
                  id:
                    type: string
components:
  schemas:
    activity:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        exercises:
          type: array
          items:
            type: string
      required:
        - name
    exerciseType:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        intensityType:
          type: string
          enum:
            - MetricWeight
            - ImperialWeight
            - PercentOfMax
            - RPE10
            - HRZone5
        volumeType:
          type: string
          enum:
            - SetsReps
            - RepsDistance
            - RepsDuration
            - RepsDimension
        trackFailures:
          type: boolean
      required:
        - name
        - intensityType
        - volumeType
    set:
      type: object
      properties:
        index:
          type: integer
        intensity:
          type: number
        volume:
          type: number
    exercise:
      type: object
      properties:
        type:
          type: string
        index:
          type: integer
        parts:
          type: array
          items:
            $ref: "#components/schemas/set"
      required:
        - type
        - index
        - parts
    eventMeta:
      type: object
      properties:
        mood:
          type: integer
        motivation:
          type: integer
        energy:
          type: integer
        quality:
          type: integer
        notes:
          type: string
    event:
      type: object
      properties:
        activityID:
          type: string
        date:
          type: integer
        id:
          type: string
        meta:
          $ref: "#/components/schemas/eventMeta"
        exercises:
          type: array
          items:
            $ref: "#/components/schemas/exercise"
      required:
        - activityID
        - date
    newEvent:
      type: object
      properties:
        activityID:
          type: string
        date:
          type: integer
        id:
          type: string
        meta:
          $ref: "#/components/schemas/eventMeta"
      required:
        - activityID
        - date
  securitySchemes:
    token:
      type: http
      scheme: bearer
      bearerFormat: JWT

  requestBodies:
    event:
      content:
        json/application:
          schema:
            $ref: "#/components/schemas/event"
    newEvent:
      content:
        json/application:
          schema:
            $ref: "#/components/schemas/newEvent"
    postExercise:
      content:
        json/application:
          schema:
            $ref: "#/components/schemas/exercise"
  responses:
    200:
      description: OK
